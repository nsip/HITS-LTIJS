(function() {
  var oauth, should;

  should = require('should');

  oauth = require('./oauth');

  describe('oauth', function() {
    describe('nonce()', function() {
      return it('should return random 32-digit hexidecimal string', function() {
        oauth.nonce().should.not.equal(oauth.nonce());
        return /[0-9A-Za-z]{32}/.test(oauth.nonce()).should.be["true"];
      });
    });
    describe('sign()', function() {
      it('should return success with valid signature method', function() {
        var params;
        params = {
          oauth_callback: 'about:blank',
          oauth_consumer_key: 'oauth_consumer_key',
          oauth_nonce: oauth.nonce(),
          oauth_signature_method: 'HMAC-SHA1',
          oauth_timestamp: Date.now(),
          oauth_version: '1.0'
        };
        return oauth.sign('POST', 'url', params, 'consumerSecret').cata({
          success: function() {
            return should(true).ok;
          },
          failure: function() {
            return should(false).ok;
          }
        });
      });
      return it('should return failure with unknown signature method', function() {
        var params;
        params = {
          oauth_callback: 'about:blank',
          oauth_consumer_key: 'oauth_consumer_key',
          oauth_nonce: oauth.nonce(),
          oauth_signature_method: 'pandora',
          oauth_timestamp: Date.now(),
          oauth_version: '1.0'
        };
        return oauth.sign('POST', 'url', params, 'consumerSecret').cata({
          success: function() {
            return should(false).ok;
          },
          failure: function() {
            return should(true).ok;
          }
        });
      });
    });
    return describe('authorization()', function() {
      return it('should return success with valid arguments', function() {
        return oauth.authorization('POST', 'url', {}, 'consumerKey', 'consumerSecret').cata({
          success: function(auth) {
            return auth.hasOwnProperty('oauth_signature').should.be["true"];
          },
          failure: function() {
            return should(true).ok;
          }
        });
      });
    });
  });

}).call(this);
