bilby = require('bilby')
boolean = require('./boolean')
should = require('should')

describe('boolean', ->
	describe('arrayey()', ->
		it('should return false if null', -> boolean.arrayey(null).should.be.false)
		it('should return false if 0', -> boolean.arrayey(0).should.be.false)
		it('should return false if an empty string', -> boolean.arrayey('').should.be.false)
		it('should return true if an empty array', -> boolean.arrayey([]).should.be.true)
		it('should return false if an empty object', -> boolean.arrayey({}).should.be.false)
		it('should return false if true', -> boolean.arrayey(true).should.be.false)
		it('should return false if false', -> boolean.arrayey(false).should.be.false)
	)
	describe('booleany()', ->
		it('should return false if null', -> boolean.booleany(null).should.be.false)
		it('should return false if 0', -> boolean.booleany(0).should.be.false)
		it('should return false if an empty string', -> boolean.booleany('').should.be.false)
		it('should return false if an empty array', -> boolean.booleany([]).should.be.false)
		it('should return false if an empty object', -> boolean.booleany({}).should.be.false)
		it('should return true if true', -> boolean.booleany(true).should.be.true)
		it('should return true if false', -> boolean.booleany(false).should.be.true)
	)
	describe('existy()', ->
		it('should return false if null', -> boolean.existy(null).should.be.false)
		it('should return true if 0', -> boolean.existy(0).should.be.true)
		it('should return true if an empty string', -> boolean.existy('').should.be.true)
		it('should return true if an empty array', -> boolean.existy([]).should.be.true)
		it('should return true if an empty object', -> boolean.existy({}).should.be.true)
		it('should return true if true', -> boolean.existy(true).should.be.true)
		it('should return true if false', -> boolean.existy(false).should.be.true)
	)
	describe('extensibley()', ->
		it('should return false if null', -> boolean.extensibley(null).should.be.false)
		it('should return false if 0', -> boolean.extensibley(0).should.be.false)
		it('should return false if an empty string', -> boolean.extensibley('').should.be.false)
		it('should return true if an empty array', -> boolean.extensibley([]).should.be.true)
		it('should return true if an empty object', -> boolean.extensibley({}).should.be.true)
		it('should return false if true', -> boolean.extensibley(true).should.be.false)
		it('should return false if false', -> boolean.extensibley(false).should.be.false)
		it('should return false if an empty array', -> boolean.extensibley(Object.preventExtensions([])).should.be.false)
		it('should return false if an empty object', -> boolean.extensibley(Object.preventExtensions({})).should.be.false)
	)
	describe('finitey()', ->
		it('should return false if null', -> boolean.finitey(null).should.be.false)
		it('should return true if 0', -> boolean.finitey(0).should.be.true)
		it('should return false if an empty string', -> boolean.finitey('').should.be.false)
		it('should return false if an empty array', -> boolean.finitey([]).should.be.false)
		it('should return false if an empty object', -> boolean.finitey({}).should.be.false)
		it('should return false if true', -> boolean.finitey(true).should.be.false)
		it('should return false if false', -> boolean.finitey(false).should.be.false)
		it('should return false if function', -> boolean.finitey(()->).should.be.false)
		it('should return true if string of 1', -> boolean.finitey('1').should.be.true)
		it('should return false if string of bob', -> boolean.finitey('bob').should.be.false)
	)
	describe('functiony()', ->
		it('should return false if null', -> boolean.functiony(null).should.be.false)
		it('should return false if 0', -> boolean.functiony(0).should.be.false)
		it('should return false if an empty string', -> boolean.functiony('').should.be.false)
		it('should return false if an empty array', -> boolean.functiony([]).should.be.false)
		it('should return false if an empty object', -> boolean.functiony({}).should.be.false)
		it('should return false if true', -> boolean.functiony(true).should.be.false)
		it('should return false if false', -> boolean.functiony(false).should.be.false)
		it('should return true if function', -> boolean.functiony(()->).should.be.true)
	)
	describe('frozeny()', ->
		it('should return false if null', -> boolean.frozeny(null).should.be.false)
		it('should return false if 0', -> boolean.frozeny(0).should.be.false)
		it('should return false if an empty string', -> boolean.frozeny('').should.be.false)
		it('should return false if an empty array', -> boolean.frozeny([]).should.be.false)
		it('should return false if an empty object', -> boolean.frozeny({}).should.be.false)
		it('should return false if true', -> boolean.frozeny(true).should.be.false)
		it('should return false if false', -> boolean.frozeny(false).should.be.false)
		it('should return true if a frozen empty object', -> boolean.frozeny(Object.freeze({})).should.be.true)
	)
	describe('lengthy()', ->
		it('should return false if null', -> boolean.lengthy(null).should.be.false)
		it('should return false if 0', -> boolean.lengthy(0).should.be.false)
		it('should return false if an empty string', -> boolean.lengthy('').should.be.false)
		it('should return false if an empty array', -> boolean.lengthy([]).should.be.false)
		it('should return false if an empty object', -> boolean.lengthy({}).should.be.false)
		it('should return false if true', -> boolean.lengthy(true).should.be.false)
		it('should return false if false', -> boolean.lengthy(false).should.be.false)
		it('should return true if a non-empty string', -> boolean.lengthy('non').should.be.true)
		it('should return true if a non-empty array', -> boolean.lengthy('non').should.be.true)
		it('should return true if a non-empty object', -> boolean.lengthy({non: 'non'}).should.be.true)
	)
	describe('nany()', ->
		it('should return false if null', -> boolean.nany(null).should.be.false)
		it('should return false if 0', -> boolean.nany(0).should.be.false)
		it('should return false if an empty string', -> boolean.nany('').should.be.false)
		it('should return false if an empty array', -> boolean.nany([]).should.be.false)
		it('should return true if an empty object', -> boolean.nany({}).should.be.true)
		it('should return false if true', -> boolean.nany(true).should.be.false)
		it('should return false if false', -> boolean.nany(false).should.be.false)
		it('should return true if NaN', -> boolean.nany(NaN).should.be.true)
	)
	describe('numbery()', ->
		it('should return false if null', -> boolean.numbery(null).should.be.false)
		it('should return true if 0', -> boolean.numbery(0).should.be.true)
		it('should return false if an empty string', -> boolean.numbery('').should.be.false)
		it('should return false if an empty array', -> boolean.numbery([]).should.be.false)
		it('should return false if an empty object', -> boolean.numbery({}).should.be.false)
		it('should return false if true', -> boolean.numbery(true).should.be.false)
		it('should return false if false', -> boolean.numbery(false).should.be.false)
	)
	describe('objecty()', ->
		it('should return false if null', -> boolean.objecty(null).should.be.false)
		it('should return false if 0', -> boolean.objecty(0).should.be.false)
		it('should return false if an empty string', -> boolean.objecty('').should.be.false)
		it('should return true if an empty array', -> boolean.objecty([]).should.be.true)
		it('should return true if an empty object', -> boolean.objecty({}).should.be.true)
		it('should return false if true', -> boolean.objecty(true).should.be.false)
		it('should return false if false', -> boolean.objecty(false).should.be.false)
		it('should return false if function', -> boolean.objecty(()->).should.be.false)
	)
	describe('sealedy()', ->
		it('should return false if null', -> boolean.sealedy(null).should.be.false)
		it('should return false if 0', -> boolean.sealedy(0).should.be.false)
		it('should return false if an empty string', -> boolean.sealedy('').should.be.false)
		it('should return false if an empty array', -> boolean.sealedy([]).should.be.false)
		it('should return false if an empty object', -> boolean.sealedy({}).should.be.false)
		it('should return false if true', -> boolean.sealedy(true).should.be.false)
		it('should return false if false', -> boolean.sealedy(false).should.be.false)
		it('should return true if an empty object', -> boolean.sealedy(Object.seal({})).should.be.true)
	)
	describe('stringy()', ->
		it('should return false if null', -> boolean.stringy(null).should.be.false)
		it('should return false if 0', -> boolean.stringy(0).should.be.false)
		it('should return true if an empty string', -> boolean.stringy('').should.be.true)
		it('should return false if an empty array', -> boolean.stringy([]).should.be.false)
		it('should return false if an empty object', -> boolean.stringy({}).should.be.false)
		it('should return false if true', -> boolean.stringy(true).should.be.false)
		it('should return false if false', -> boolean.stringy(false).should.be.false)
		it('should return false if function', -> boolean.stringy(()->).should.be.false)
	)
	describe('truthy()', ->
		it('should return false if null', -> boolean.truthy(null).should.be.false)
		it('should return true if 0', -> boolean.truthy(0).should.be.true)
		it('should return true if an empty string', -> boolean.truthy('').should.be.true)
		it('should return true if an empty array', -> boolean.truthy([]).should.be.true)
		it('should return true if an empty object', -> boolean.truthy({}).should.be.true)
		it('should return true if true', -> boolean.truthy(true).should.be.true)
		it('should return false if false', -> boolean.truthy(false).should.be.false)
	)
)
