(function() {
  var bilby, boolean, should, validation;

  bilby = require('bilby');

  boolean = require('./boolean');

  should = require('should');

  validation = require('./validation');

  describe('validation', function() {
    return describe('validationize()', function() {
      var f;
      f = validation.validationize(boolean.truthy);
      it('should return none if null', function() {
        return f(null, ['failure']).hasOwnProperty('errors').should.be["true"];
      });
      it('should return some if 0', function() {
        return f(0, ['failure']).hasOwnProperty('value').should.be["true"];
      });
      it('should return some if an empty string', function() {
        return f('', ['failure']).hasOwnProperty('value').should.be["true"];
      });
      it('should return some if an empty array', function() {
        return f([], ['failure']).hasOwnProperty('value').should.be["true"];
      });
      it('should return some if an empty object', function() {
        return f({}, ['failure']).hasOwnProperty('value').should.be["true"];
      });
      it('should return some if true', function() {
        return f(true, ['failure']).hasOwnProperty('value').should.be["true"];
      });
      return it('should return none if false', function() {
        return f(false, ['failure']).hasOwnProperty('errors').should.be["true"];
      });
    });
  });

}).call(this);
